-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ALU_sys_HDL_reset is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_a_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    data_a_empty_n : IN STD_LOGIC;
    data_a_read : OUT STD_LOGIC;
    data_b_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    data_b_empty_n : IN STD_LOGIC;
    data_b_read : OUT STD_LOGIC;
    ALU_operation_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    ALU_operation_empty_n : IN STD_LOGIC;
    ALU_operation_read : OUT STD_LOGIC;
    ALU_operation_MEM_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    ALU_operation_MEM_ce0 : OUT STD_LOGIC;
    ALU_operation_MEM_we0 : OUT STD_LOGIC;
    ALU_operation_MEM_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of ALU_sys_HDL_reset is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_reset_Pipeline_clear_FIFO_a_fu_28_ap_start : STD_LOGIC;
    signal grp_reset_Pipeline_clear_FIFO_a_fu_28_ap_done : STD_LOGIC;
    signal grp_reset_Pipeline_clear_FIFO_a_fu_28_ap_idle : STD_LOGIC;
    signal grp_reset_Pipeline_clear_FIFO_a_fu_28_ap_ready : STD_LOGIC;
    signal grp_reset_Pipeline_clear_FIFO_a_fu_28_data_a_read : STD_LOGIC;
    signal grp_reset_Pipeline_clear_FIFO_b_fu_34_ap_start : STD_LOGIC;
    signal grp_reset_Pipeline_clear_FIFO_b_fu_34_ap_done : STD_LOGIC;
    signal grp_reset_Pipeline_clear_FIFO_b_fu_34_ap_idle : STD_LOGIC;
    signal grp_reset_Pipeline_clear_FIFO_b_fu_34_ap_ready : STD_LOGIC;
    signal grp_reset_Pipeline_clear_FIFO_b_fu_34_data_b_read : STD_LOGIC;
    signal grp_reset_Pipeline_clear_ALU_op_fu_40_ap_start : STD_LOGIC;
    signal grp_reset_Pipeline_clear_ALU_op_fu_40_ap_done : STD_LOGIC;
    signal grp_reset_Pipeline_clear_ALU_op_fu_40_ap_idle : STD_LOGIC;
    signal grp_reset_Pipeline_clear_ALU_op_fu_40_ap_ready : STD_LOGIC;
    signal grp_reset_Pipeline_clear_ALU_op_fu_40_ALU_operation_read : STD_LOGIC;
    signal grp_reset_Pipeline_clear_RAM_op_fu_46_ap_start : STD_LOGIC;
    signal grp_reset_Pipeline_clear_RAM_op_fu_46_ap_done : STD_LOGIC;
    signal grp_reset_Pipeline_clear_RAM_op_fu_46_ap_idle : STD_LOGIC;
    signal grp_reset_Pipeline_clear_RAM_op_fu_46_ap_ready : STD_LOGIC;
    signal grp_reset_Pipeline_clear_RAM_op_fu_46_ALU_operation_MEM_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_reset_Pipeline_clear_RAM_op_fu_46_ALU_operation_MEM_ce0 : STD_LOGIC;
    signal grp_reset_Pipeline_clear_RAM_op_fu_46_ALU_operation_MEM_we0 : STD_LOGIC;
    signal grp_reset_Pipeline_clear_RAM_op_fu_46_ALU_operation_MEM_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reset_Pipeline_clear_FIFO_a_fu_28_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_reset_Pipeline_clear_FIFO_b_fu_34_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_reset_Pipeline_clear_ALU_op_fu_40_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_reset_Pipeline_clear_RAM_op_fu_46_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state8_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component ALU_sys_HDL_reset_Pipeline_clear_FIFO_a IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_a_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        data_a_empty_n : IN STD_LOGIC;
        data_a_read : OUT STD_LOGIC );
    end component;


    component ALU_sys_HDL_reset_Pipeline_clear_FIFO_b IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_b_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        data_b_empty_n : IN STD_LOGIC;
        data_b_read : OUT STD_LOGIC );
    end component;


    component ALU_sys_HDL_reset_Pipeline_clear_ALU_op IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ALU_operation_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        ALU_operation_empty_n : IN STD_LOGIC;
        ALU_operation_read : OUT STD_LOGIC );
    end component;


    component ALU_sys_HDL_reset_Pipeline_clear_RAM_op IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ALU_operation_MEM_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        ALU_operation_MEM_ce0 : OUT STD_LOGIC;
        ALU_operation_MEM_we0 : OUT STD_LOGIC;
        ALU_operation_MEM_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_reset_Pipeline_clear_FIFO_a_fu_28 : component ALU_sys_HDL_reset_Pipeline_clear_FIFO_a
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reset_Pipeline_clear_FIFO_a_fu_28_ap_start,
        ap_done => grp_reset_Pipeline_clear_FIFO_a_fu_28_ap_done,
        ap_idle => grp_reset_Pipeline_clear_FIFO_a_fu_28_ap_idle,
        ap_ready => grp_reset_Pipeline_clear_FIFO_a_fu_28_ap_ready,
        data_a_dout => data_a_dout,
        data_a_empty_n => data_a_empty_n,
        data_a_read => grp_reset_Pipeline_clear_FIFO_a_fu_28_data_a_read);

    grp_reset_Pipeline_clear_FIFO_b_fu_34 : component ALU_sys_HDL_reset_Pipeline_clear_FIFO_b
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reset_Pipeline_clear_FIFO_b_fu_34_ap_start,
        ap_done => grp_reset_Pipeline_clear_FIFO_b_fu_34_ap_done,
        ap_idle => grp_reset_Pipeline_clear_FIFO_b_fu_34_ap_idle,
        ap_ready => grp_reset_Pipeline_clear_FIFO_b_fu_34_ap_ready,
        data_b_dout => data_b_dout,
        data_b_empty_n => data_b_empty_n,
        data_b_read => grp_reset_Pipeline_clear_FIFO_b_fu_34_data_b_read);

    grp_reset_Pipeline_clear_ALU_op_fu_40 : component ALU_sys_HDL_reset_Pipeline_clear_ALU_op
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reset_Pipeline_clear_ALU_op_fu_40_ap_start,
        ap_done => grp_reset_Pipeline_clear_ALU_op_fu_40_ap_done,
        ap_idle => grp_reset_Pipeline_clear_ALU_op_fu_40_ap_idle,
        ap_ready => grp_reset_Pipeline_clear_ALU_op_fu_40_ap_ready,
        ALU_operation_dout => ALU_operation_dout,
        ALU_operation_empty_n => ALU_operation_empty_n,
        ALU_operation_read => grp_reset_Pipeline_clear_ALU_op_fu_40_ALU_operation_read);

    grp_reset_Pipeline_clear_RAM_op_fu_46 : component ALU_sys_HDL_reset_Pipeline_clear_RAM_op
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reset_Pipeline_clear_RAM_op_fu_46_ap_start,
        ap_done => grp_reset_Pipeline_clear_RAM_op_fu_46_ap_done,
        ap_idle => grp_reset_Pipeline_clear_RAM_op_fu_46_ap_idle,
        ap_ready => grp_reset_Pipeline_clear_RAM_op_fu_46_ap_ready,
        ALU_operation_MEM_address0 => grp_reset_Pipeline_clear_RAM_op_fu_46_ALU_operation_MEM_address0,
        ALU_operation_MEM_ce0 => grp_reset_Pipeline_clear_RAM_op_fu_46_ALU_operation_MEM_ce0,
        ALU_operation_MEM_we0 => grp_reset_Pipeline_clear_RAM_op_fu_46_ALU_operation_MEM_we0,
        ALU_operation_MEM_d0 => grp_reset_Pipeline_clear_RAM_op_fu_46_ALU_operation_MEM_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_reset_Pipeline_clear_ALU_op_fu_40_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reset_Pipeline_clear_ALU_op_fu_40_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_reset_Pipeline_clear_ALU_op_fu_40_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reset_Pipeline_clear_ALU_op_fu_40_ap_ready = ap_const_logic_1)) then 
                    grp_reset_Pipeline_clear_ALU_op_fu_40_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_reset_Pipeline_clear_FIFO_a_fu_28_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reset_Pipeline_clear_FIFO_a_fu_28_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_reset_Pipeline_clear_FIFO_a_fu_28_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reset_Pipeline_clear_FIFO_a_fu_28_ap_ready = ap_const_logic_1)) then 
                    grp_reset_Pipeline_clear_FIFO_a_fu_28_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_reset_Pipeline_clear_FIFO_b_fu_34_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reset_Pipeline_clear_FIFO_b_fu_34_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_reset_Pipeline_clear_FIFO_b_fu_34_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reset_Pipeline_clear_FIFO_b_fu_34_ap_ready = ap_const_logic_1)) then 
                    grp_reset_Pipeline_clear_FIFO_b_fu_34_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_reset_Pipeline_clear_RAM_op_fu_46_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reset_Pipeline_clear_RAM_op_fu_46_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_reset_Pipeline_clear_RAM_op_fu_46_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reset_Pipeline_clear_RAM_op_fu_46_ap_ready = ap_const_logic_1)) then 
                    grp_reset_Pipeline_clear_RAM_op_fu_46_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_reset_Pipeline_clear_FIFO_a_fu_28_ap_done, grp_reset_Pipeline_clear_FIFO_b_fu_34_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state8, ap_block_state8_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_reset_Pipeline_clear_FIFO_a_fu_28_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_reset_Pipeline_clear_FIFO_b_fu_34_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ALU_operation_MEM_address0 <= grp_reset_Pipeline_clear_RAM_op_fu_46_ALU_operation_MEM_address0;
    ALU_operation_MEM_ce0 <= grp_reset_Pipeline_clear_RAM_op_fu_46_ALU_operation_MEM_ce0;
    ALU_operation_MEM_d0 <= grp_reset_Pipeline_clear_RAM_op_fu_46_ALU_operation_MEM_d0;
    ALU_operation_MEM_we0 <= grp_reset_Pipeline_clear_RAM_op_fu_46_ALU_operation_MEM_we0;

    ALU_operation_read_assign_proc : process(grp_reset_Pipeline_clear_ALU_op_fu_40_ALU_operation_read, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ALU_operation_read <= grp_reset_Pipeline_clear_ALU_op_fu_40_ALU_operation_read;
        else 
            ALU_operation_read <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_reset_Pipeline_clear_FIFO_a_fu_28_ap_done)
    begin
        if ((grp_reset_Pipeline_clear_FIFO_a_fu_28_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_reset_Pipeline_clear_FIFO_b_fu_34_ap_done)
    begin
        if ((grp_reset_Pipeline_clear_FIFO_b_fu_34_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(ap_block_state8_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state8_on_subcall_done)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state8_on_subcall_done_assign_proc : process(grp_reset_Pipeline_clear_ALU_op_fu_40_ap_done, grp_reset_Pipeline_clear_RAM_op_fu_46_ap_done)
    begin
                ap_block_state8_on_subcall_done <= ((grp_reset_Pipeline_clear_RAM_op_fu_46_ap_done = ap_const_logic_0) or (grp_reset_Pipeline_clear_ALU_op_fu_40_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state8, ap_block_state8_on_subcall_done)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state8, ap_block_state8_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    data_a_read_assign_proc : process(grp_reset_Pipeline_clear_FIFO_a_fu_28_data_a_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_a_read <= grp_reset_Pipeline_clear_FIFO_a_fu_28_data_a_read;
        else 
            data_a_read <= ap_const_logic_0;
        end if; 
    end process;


    data_b_read_assign_proc : process(grp_reset_Pipeline_clear_FIFO_b_fu_34_data_b_read, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            data_b_read <= grp_reset_Pipeline_clear_FIFO_b_fu_34_data_b_read;
        else 
            data_b_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_reset_Pipeline_clear_ALU_op_fu_40_ap_start <= grp_reset_Pipeline_clear_ALU_op_fu_40_ap_start_reg;
    grp_reset_Pipeline_clear_FIFO_a_fu_28_ap_start <= grp_reset_Pipeline_clear_FIFO_a_fu_28_ap_start_reg;
    grp_reset_Pipeline_clear_FIFO_b_fu_34_ap_start <= grp_reset_Pipeline_clear_FIFO_b_fu_34_ap_start_reg;
    grp_reset_Pipeline_clear_RAM_op_fu_46_ap_start <= grp_reset_Pipeline_clear_RAM_op_fu_46_ap_start_reg;
end behav;
