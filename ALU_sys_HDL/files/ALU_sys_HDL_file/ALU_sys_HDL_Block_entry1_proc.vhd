-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ALU_sys_HDL_Block_entry1_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    selec : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_AWVALID : OUT STD_LOGIC;
    m_axi_gmem3_AWREADY : IN STD_LOGIC;
    m_axi_gmem3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_WVALID : OUT STD_LOGIC;
    m_axi_gmem3_WREADY : IN STD_LOGIC;
    m_axi_gmem3_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_WLAST : OUT STD_LOGIC;
    m_axi_gmem3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_ARVALID : OUT STD_LOGIC;
    m_axi_gmem3_ARREADY : IN STD_LOGIC;
    m_axi_gmem3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_RVALID : IN STD_LOGIC;
    m_axi_gmem3_RREADY : OUT STD_LOGIC;
    m_axi_gmem3_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_RLAST : IN STD_LOGIC;
    m_axi_gmem3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_BVALID : IN STD_LOGIC;
    m_axi_gmem3_BREADY : OUT STD_LOGIC;
    m_axi_gmem3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    op : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    a : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    b : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem2_AWREADY : IN STD_LOGIC;
    m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_WVALID : OUT STD_LOGIC;
    m_axi_gmem2_WREADY : IN STD_LOGIC;
    m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_WLAST : OUT STD_LOGIC;
    m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem2_ARREADY : IN STD_LOGIC;
    m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RVALID : IN STD_LOGIC;
    m_axi_gmem2_RREADY : OUT STD_LOGIC;
    m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_RLAST : IN STD_LOGIC;
    m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BVALID : IN STD_LOGIC;
    m_axi_gmem2_BREADY : OUT STD_LOGIC;
    m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    c : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of ALU_sys_HDL_Block_entry1_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ALU_operation_MEM_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal ALU_operation_MEM_ce0 : STD_LOGIC;
    signal ALU_operation_MEM_we0 : STD_LOGIC;
    signal ALU_operation_MEM_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ALU_operation_MEM_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal grp_op_data_exe_wb_fu_112_ap_start : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_ap_done : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_ap_idle : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_ap_ready : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_WVALID : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_WLAST : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_RREADY : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem1_BREADY : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWVALID : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_WVALID : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_WLAST : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARVALID : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_RREADY : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem3_BREADY : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWVALID : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_WVALID : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_WLAST : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARVALID : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_RREADY : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_m_axi_gmem2_BREADY : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_ALU_operation_MEM_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_op_data_exe_wb_fu_112_ALU_operation_MEM_ce0 : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_ALU_operation_MEM_we0 : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_ALU_operation_MEM_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_op_data_exe_wb_fu_112_ALU_operation_read : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_ALU_operation_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_op_data_exe_wb_fu_112_ALU_operation_write : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_data_a_read : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_data_a_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_op_data_exe_wb_fu_112_data_a_write : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_data_b_read : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_data_b_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_op_data_exe_wb_fu_112_data_b_write : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_data_result_read : STD_LOGIC;
    signal grp_op_data_exe_wb_fu_112_data_result_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_op_data_exe_wb_fu_112_data_result_write : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_ap_start : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_ap_done : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_ap_idle : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_ap_ready : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_WVALID : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_WLAST : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_RREADY : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_m_axi_gmem1_BREADY : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_AWVALID : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_WVALID : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_WLAST : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_ARVALID : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_RREADY : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_m_axi_gmem2_BREADY : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_ALU_operation_MEM_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_data_exe_wb_fu_142_ALU_operation_MEM_ce0 : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_data_a_read : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_data_a_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_data_exe_wb_fu_142_data_a_write : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_data_b_read : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_data_b_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_data_exe_wb_fu_142_data_b_write : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_data_result_read : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_data_result_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_data_exe_wb_fu_142_data_result_write : STD_LOGIC;
    signal grp_operation_fu_166_ap_start : STD_LOGIC;
    signal grp_operation_fu_166_ap_done : STD_LOGIC;
    signal grp_operation_fu_166_ap_idle : STD_LOGIC;
    signal grp_operation_fu_166_ap_ready : STD_LOGIC;
    signal grp_operation_fu_166_m_axi_gmem3_AWVALID : STD_LOGIC;
    signal grp_operation_fu_166_m_axi_gmem3_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_WVALID : STD_LOGIC;
    signal grp_operation_fu_166_m_axi_gmem3_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_WLAST : STD_LOGIC;
    signal grp_operation_fu_166_m_axi_gmem3_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_ARVALID : STD_LOGIC;
    signal grp_operation_fu_166_m_axi_gmem3_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_operation_fu_166_m_axi_gmem3_RREADY : STD_LOGIC;
    signal grp_operation_fu_166_m_axi_gmem3_BREADY : STD_LOGIC;
    signal grp_operation_fu_166_ALU_operation_MEM_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_operation_fu_166_ALU_operation_MEM_ce0 : STD_LOGIC;
    signal grp_operation_fu_166_ALU_operation_MEM_we0 : STD_LOGIC;
    signal grp_operation_fu_166_ALU_operation_MEM_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operation_fu_166_ALU_operation_read : STD_LOGIC;
    signal grp_operation_fu_166_ALU_operation_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operation_fu_166_ALU_operation_write : STD_LOGIC;
    signal grp_reset_fu_178_ap_start : STD_LOGIC;
    signal grp_reset_fu_178_ap_done : STD_LOGIC;
    signal grp_reset_fu_178_ap_idle : STD_LOGIC;
    signal grp_reset_fu_178_ap_ready : STD_LOGIC;
    signal grp_reset_fu_178_data_a_read : STD_LOGIC;
    signal grp_reset_fu_178_data_b_read : STD_LOGIC;
    signal grp_reset_fu_178_ALU_operation_read : STD_LOGIC;
    signal grp_reset_fu_178_ALU_operation_MEM_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_reset_fu_178_ALU_operation_MEM_ce0 : STD_LOGIC;
    signal grp_reset_fu_178_ALU_operation_MEM_we0 : STD_LOGIC;
    signal grp_reset_fu_178_ALU_operation_MEM_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_op_data_exe_wb_fu_112_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call0 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ALU_operation_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal ALU_operation_empty_n : STD_LOGIC;
    signal ALU_operation_read : STD_LOGIC;
    signal ALU_operation_din : STD_LOGIC_VECTOR (31 downto 0);
    signal ALU_operation_full_n : STD_LOGIC;
    signal ALU_operation_write : STD_LOGIC;
    signal data_a_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal data_a_empty_n : STD_LOGIC;
    signal data_a_read : STD_LOGIC;
    signal data_a_din : STD_LOGIC_VECTOR (31 downto 0);
    signal data_a_full_n : STD_LOGIC;
    signal data_a_write : STD_LOGIC;
    signal data_b_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal data_b_empty_n : STD_LOGIC;
    signal data_b_read : STD_LOGIC;
    signal data_b_din : STD_LOGIC_VECTOR (31 downto 0);
    signal data_b_full_n : STD_LOGIC;
    signal data_b_write : STD_LOGIC;
    signal data_result_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal data_result_empty_n : STD_LOGIC;
    signal data_result_read : STD_LOGIC;
    signal data_result_din : STD_LOGIC_VECTOR (31 downto 0);
    signal data_result_full_n : STD_LOGIC;
    signal data_result_write : STD_LOGIC;
    signal grp_data_exe_wb_fu_142_ap_start_reg : STD_LOGIC := '0';
    signal grp_operation_fu_166_ap_start_reg : STD_LOGIC := '0';
    signal grp_reset_fu_178_ap_start_reg : STD_LOGIC := '0';
    signal ap_predicate_op31_call_state2 : BOOLEAN;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_condition_811 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component ALU_sys_HDL_op_data_exe_wb IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        a : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        b : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_AWVALID : OUT STD_LOGIC;
        m_axi_gmem3_AWREADY : IN STD_LOGIC;
        m_axi_gmem3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_WVALID : OUT STD_LOGIC;
        m_axi_gmem3_WREADY : IN STD_LOGIC;
        m_axi_gmem3_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_WLAST : OUT STD_LOGIC;
        m_axi_gmem3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_ARVALID : OUT STD_LOGIC;
        m_axi_gmem3_ARREADY : IN STD_LOGIC;
        m_axi_gmem3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RVALID : IN STD_LOGIC;
        m_axi_gmem3_RREADY : OUT STD_LOGIC;
        m_axi_gmem3_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_RLAST : IN STD_LOGIC;
        m_axi_gmem3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_BVALID : IN STD_LOGIC;
        m_axi_gmem3_BREADY : OUT STD_LOGIC;
        m_axi_gmem3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        op : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_AWVALID : OUT STD_LOGIC;
        m_axi_gmem2_AWREADY : IN STD_LOGIC;
        m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WVALID : OUT STD_LOGIC;
        m_axi_gmem2_WREADY : IN STD_LOGIC;
        m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_WLAST : OUT STD_LOGIC;
        m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARVALID : OUT STD_LOGIC;
        m_axi_gmem2_ARREADY : IN STD_LOGIC;
        m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RVALID : IN STD_LOGIC;
        m_axi_gmem2_RREADY : OUT STD_LOGIC;
        m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_RLAST : IN STD_LOGIC;
        m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BVALID : IN STD_LOGIC;
        m_axi_gmem2_BREADY : OUT STD_LOGIC;
        m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        c : IN STD_LOGIC_VECTOR (63 downto 0);
        ALU_operation_MEM_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        ALU_operation_MEM_ce0 : OUT STD_LOGIC;
        ALU_operation_MEM_we0 : OUT STD_LOGIC;
        ALU_operation_MEM_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ALU_operation_MEM_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ALU_operation_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        ALU_operation_empty_n : IN STD_LOGIC;
        ALU_operation_read : OUT STD_LOGIC;
        ALU_operation_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        ALU_operation_full_n : IN STD_LOGIC;
        ALU_operation_write : OUT STD_LOGIC;
        data_a_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        data_a_empty_n : IN STD_LOGIC;
        data_a_read : OUT STD_LOGIC;
        data_a_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_a_full_n : IN STD_LOGIC;
        data_a_write : OUT STD_LOGIC;
        data_b_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        data_b_empty_n : IN STD_LOGIC;
        data_b_read : OUT STD_LOGIC;
        data_b_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_b_full_n : IN STD_LOGIC;
        data_b_write : OUT STD_LOGIC;
        data_result_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        data_result_empty_n : IN STD_LOGIC;
        data_result_read : OUT STD_LOGIC;
        data_result_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_result_full_n : IN STD_LOGIC;
        data_result_write : OUT STD_LOGIC );
    end component;


    component ALU_sys_HDL_data_exe_wb IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        a : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        b : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_AWVALID : OUT STD_LOGIC;
        m_axi_gmem2_AWREADY : IN STD_LOGIC;
        m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WVALID : OUT STD_LOGIC;
        m_axi_gmem2_WREADY : IN STD_LOGIC;
        m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_WLAST : OUT STD_LOGIC;
        m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARVALID : OUT STD_LOGIC;
        m_axi_gmem2_ARREADY : IN STD_LOGIC;
        m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RVALID : IN STD_LOGIC;
        m_axi_gmem2_RREADY : OUT STD_LOGIC;
        m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_RLAST : IN STD_LOGIC;
        m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BVALID : IN STD_LOGIC;
        m_axi_gmem2_BREADY : OUT STD_LOGIC;
        m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        c : IN STD_LOGIC_VECTOR (63 downto 0);
        ALU_operation_MEM_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        ALU_operation_MEM_ce0 : OUT STD_LOGIC;
        ALU_operation_MEM_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_a_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        data_a_empty_n : IN STD_LOGIC;
        data_a_read : OUT STD_LOGIC;
        data_a_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_a_full_n : IN STD_LOGIC;
        data_a_write : OUT STD_LOGIC;
        data_b_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        data_b_empty_n : IN STD_LOGIC;
        data_b_read : OUT STD_LOGIC;
        data_b_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_b_full_n : IN STD_LOGIC;
        data_b_write : OUT STD_LOGIC;
        data_result_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        data_result_empty_n : IN STD_LOGIC;
        data_result_read : OUT STD_LOGIC;
        data_result_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_result_full_n : IN STD_LOGIC;
        data_result_write : OUT STD_LOGIC );
    end component;


    component ALU_sys_HDL_operation IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem3_AWVALID : OUT STD_LOGIC;
        m_axi_gmem3_AWREADY : IN STD_LOGIC;
        m_axi_gmem3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_WVALID : OUT STD_LOGIC;
        m_axi_gmem3_WREADY : IN STD_LOGIC;
        m_axi_gmem3_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_WLAST : OUT STD_LOGIC;
        m_axi_gmem3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_ARVALID : OUT STD_LOGIC;
        m_axi_gmem3_ARREADY : IN STD_LOGIC;
        m_axi_gmem3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RVALID : IN STD_LOGIC;
        m_axi_gmem3_RREADY : OUT STD_LOGIC;
        m_axi_gmem3_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_RLAST : IN STD_LOGIC;
        m_axi_gmem3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_BVALID : IN STD_LOGIC;
        m_axi_gmem3_BREADY : OUT STD_LOGIC;
        m_axi_gmem3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        op : IN STD_LOGIC_VECTOR (63 downto 0);
        ALU_operation_MEM_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        ALU_operation_MEM_ce0 : OUT STD_LOGIC;
        ALU_operation_MEM_we0 : OUT STD_LOGIC;
        ALU_operation_MEM_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ALU_operation_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        ALU_operation_empty_n : IN STD_LOGIC;
        ALU_operation_read : OUT STD_LOGIC;
        ALU_operation_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        ALU_operation_full_n : IN STD_LOGIC;
        ALU_operation_write : OUT STD_LOGIC );
    end component;


    component ALU_sys_HDL_reset IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_a_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        data_a_empty_n : IN STD_LOGIC;
        data_a_read : OUT STD_LOGIC;
        data_b_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        data_b_empty_n : IN STD_LOGIC;
        data_b_read : OUT STD_LOGIC;
        ALU_operation_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        ALU_operation_empty_n : IN STD_LOGIC;
        ALU_operation_read : OUT STD_LOGIC;
        ALU_operation_MEM_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        ALU_operation_MEM_ce0 : OUT STD_LOGIC;
        ALU_operation_MEM_we0 : OUT STD_LOGIC;
        ALU_operation_MEM_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ALU_sys_HDL_Block_entry1_proc_ALU_operation_MEM_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ALU_sys_HDL_fifo_w32_d400_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    ALU_operation_MEM_U : component ALU_sys_HDL_Block_entry1_proc_ALU_operation_MEM_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ALU_operation_MEM_address0,
        ce0 => ALU_operation_MEM_ce0,
        we0 => ALU_operation_MEM_we0,
        d0 => ALU_operation_MEM_d0,
        q0 => ALU_operation_MEM_q0);

    grp_op_data_exe_wb_fu_112 : component ALU_sys_HDL_op_data_exe_wb
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_op_data_exe_wb_fu_112_ap_start,
        ap_done => grp_op_data_exe_wb_fu_112_ap_done,
        ap_idle => grp_op_data_exe_wb_fu_112_ap_idle,
        ap_ready => grp_op_data_exe_wb_fu_112_ap_ready,
        m_axi_gmem0_AWVALID => grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => ap_const_logic_0,
        m_axi_gmem0_AWADDR => grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_op_data_exe_wb_fu_112_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_op_data_exe_wb_fu_112_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => ap_const_logic_0,
        m_axi_gmem0_WDATA => grp_op_data_exe_wb_fu_112_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_op_data_exe_wb_fu_112_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_op_data_exe_wb_fu_112_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_op_data_exe_wb_fu_112_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_op_data_exe_wb_fu_112_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_op_data_exe_wb_fu_112_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST => m_axi_gmem0_RLAST,
        m_axi_gmem0_RID => m_axi_gmem0_RID,
        m_axi_gmem0_RFIFONUM => m_axi_gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP => m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID => ap_const_logic_0,
        m_axi_gmem0_BREADY => grp_op_data_exe_wb_fu_112_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        a => a,
        m_axi_gmem1_AWVALID => grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => ap_const_logic_0,
        m_axi_gmem1_AWADDR => grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => grp_op_data_exe_wb_fu_112_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => grp_op_data_exe_wb_fu_112_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => ap_const_logic_0,
        m_axi_gmem1_WDATA => grp_op_data_exe_wb_fu_112_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => grp_op_data_exe_wb_fu_112_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => grp_op_data_exe_wb_fu_112_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => grp_op_data_exe_wb_fu_112_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => grp_op_data_exe_wb_fu_112_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR => grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY => grp_op_data_exe_wb_fu_112_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST => m_axi_gmem1_RLAST,
        m_axi_gmem1_RID => m_axi_gmem1_RID,
        m_axi_gmem1_RFIFONUM => m_axi_gmem1_RFIFONUM,
        m_axi_gmem1_RUSER => m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP => m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID => ap_const_logic_0,
        m_axi_gmem1_BREADY => grp_op_data_exe_wb_fu_112_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => ap_const_lv2_0,
        m_axi_gmem1_BID => ap_const_lv1_0,
        m_axi_gmem1_BUSER => ap_const_lv1_0,
        b => b,
        m_axi_gmem3_AWVALID => grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWVALID,
        m_axi_gmem3_AWREADY => ap_const_logic_0,
        m_axi_gmem3_AWADDR => grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWADDR,
        m_axi_gmem3_AWID => grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWID,
        m_axi_gmem3_AWLEN => grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWLEN,
        m_axi_gmem3_AWSIZE => grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWSIZE,
        m_axi_gmem3_AWBURST => grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWBURST,
        m_axi_gmem3_AWLOCK => grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWLOCK,
        m_axi_gmem3_AWCACHE => grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWCACHE,
        m_axi_gmem3_AWPROT => grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWPROT,
        m_axi_gmem3_AWQOS => grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWQOS,
        m_axi_gmem3_AWREGION => grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWREGION,
        m_axi_gmem3_AWUSER => grp_op_data_exe_wb_fu_112_m_axi_gmem3_AWUSER,
        m_axi_gmem3_WVALID => grp_op_data_exe_wb_fu_112_m_axi_gmem3_WVALID,
        m_axi_gmem3_WREADY => ap_const_logic_0,
        m_axi_gmem3_WDATA => grp_op_data_exe_wb_fu_112_m_axi_gmem3_WDATA,
        m_axi_gmem3_WSTRB => grp_op_data_exe_wb_fu_112_m_axi_gmem3_WSTRB,
        m_axi_gmem3_WLAST => grp_op_data_exe_wb_fu_112_m_axi_gmem3_WLAST,
        m_axi_gmem3_WID => grp_op_data_exe_wb_fu_112_m_axi_gmem3_WID,
        m_axi_gmem3_WUSER => grp_op_data_exe_wb_fu_112_m_axi_gmem3_WUSER,
        m_axi_gmem3_ARVALID => grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARVALID,
        m_axi_gmem3_ARREADY => m_axi_gmem3_ARREADY,
        m_axi_gmem3_ARADDR => grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARADDR,
        m_axi_gmem3_ARID => grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARID,
        m_axi_gmem3_ARLEN => grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARLEN,
        m_axi_gmem3_ARSIZE => grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARSIZE,
        m_axi_gmem3_ARBURST => grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARBURST,
        m_axi_gmem3_ARLOCK => grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARLOCK,
        m_axi_gmem3_ARCACHE => grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARCACHE,
        m_axi_gmem3_ARPROT => grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARPROT,
        m_axi_gmem3_ARQOS => grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARQOS,
        m_axi_gmem3_ARREGION => grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARREGION,
        m_axi_gmem3_ARUSER => grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARUSER,
        m_axi_gmem3_RVALID => m_axi_gmem3_RVALID,
        m_axi_gmem3_RREADY => grp_op_data_exe_wb_fu_112_m_axi_gmem3_RREADY,
        m_axi_gmem3_RDATA => m_axi_gmem3_RDATA,
        m_axi_gmem3_RLAST => m_axi_gmem3_RLAST,
        m_axi_gmem3_RID => m_axi_gmem3_RID,
        m_axi_gmem3_RFIFONUM => m_axi_gmem3_RFIFONUM,
        m_axi_gmem3_RUSER => m_axi_gmem3_RUSER,
        m_axi_gmem3_RRESP => m_axi_gmem3_RRESP,
        m_axi_gmem3_BVALID => ap_const_logic_0,
        m_axi_gmem3_BREADY => grp_op_data_exe_wb_fu_112_m_axi_gmem3_BREADY,
        m_axi_gmem3_BRESP => ap_const_lv2_0,
        m_axi_gmem3_BID => ap_const_lv1_0,
        m_axi_gmem3_BUSER => ap_const_lv1_0,
        op => op,
        m_axi_gmem2_AWVALID => grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY => m_axi_gmem2_AWREADY,
        m_axi_gmem2_AWADDR => grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID => grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN => grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE => grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST => grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK => grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE => grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT => grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS => grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION => grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER => grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID => grp_op_data_exe_wb_fu_112_m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY => m_axi_gmem2_WREADY,
        m_axi_gmem2_WDATA => grp_op_data_exe_wb_fu_112_m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB => grp_op_data_exe_wb_fu_112_m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST => grp_op_data_exe_wb_fu_112_m_axi_gmem2_WLAST,
        m_axi_gmem2_WID => grp_op_data_exe_wb_fu_112_m_axi_gmem2_WID,
        m_axi_gmem2_WUSER => grp_op_data_exe_wb_fu_112_m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID => grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY => ap_const_logic_0,
        m_axi_gmem2_ARADDR => grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID => grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN => grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE => grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST => grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK => grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE => grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT => grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS => grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION => grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER => grp_op_data_exe_wb_fu_112_m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID => ap_const_logic_0,
        m_axi_gmem2_RREADY => grp_op_data_exe_wb_fu_112_m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA => ap_const_lv32_0,
        m_axi_gmem2_RLAST => ap_const_logic_0,
        m_axi_gmem2_RID => ap_const_lv1_0,
        m_axi_gmem2_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem2_RUSER => ap_const_lv1_0,
        m_axi_gmem2_RRESP => ap_const_lv2_0,
        m_axi_gmem2_BVALID => m_axi_gmem2_BVALID,
        m_axi_gmem2_BREADY => grp_op_data_exe_wb_fu_112_m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP => m_axi_gmem2_BRESP,
        m_axi_gmem2_BID => m_axi_gmem2_BID,
        m_axi_gmem2_BUSER => m_axi_gmem2_BUSER,
        c => c,
        ALU_operation_MEM_address0 => grp_op_data_exe_wb_fu_112_ALU_operation_MEM_address0,
        ALU_operation_MEM_ce0 => grp_op_data_exe_wb_fu_112_ALU_operation_MEM_ce0,
        ALU_operation_MEM_we0 => grp_op_data_exe_wb_fu_112_ALU_operation_MEM_we0,
        ALU_operation_MEM_d0 => grp_op_data_exe_wb_fu_112_ALU_operation_MEM_d0,
        ALU_operation_MEM_q0 => ALU_operation_MEM_q0,
        ALU_operation_dout => ALU_operation_dout,
        ALU_operation_empty_n => ALU_operation_empty_n,
        ALU_operation_read => grp_op_data_exe_wb_fu_112_ALU_operation_read,
        ALU_operation_din => grp_op_data_exe_wb_fu_112_ALU_operation_din,
        ALU_operation_full_n => ALU_operation_full_n,
        ALU_operation_write => grp_op_data_exe_wb_fu_112_ALU_operation_write,
        data_a_dout => data_a_dout,
        data_a_empty_n => data_a_empty_n,
        data_a_read => grp_op_data_exe_wb_fu_112_data_a_read,
        data_a_din => grp_op_data_exe_wb_fu_112_data_a_din,
        data_a_full_n => data_a_full_n,
        data_a_write => grp_op_data_exe_wb_fu_112_data_a_write,
        data_b_dout => data_b_dout,
        data_b_empty_n => data_b_empty_n,
        data_b_read => grp_op_data_exe_wb_fu_112_data_b_read,
        data_b_din => grp_op_data_exe_wb_fu_112_data_b_din,
        data_b_full_n => data_b_full_n,
        data_b_write => grp_op_data_exe_wb_fu_112_data_b_write,
        data_result_dout => data_result_dout,
        data_result_empty_n => data_result_empty_n,
        data_result_read => grp_op_data_exe_wb_fu_112_data_result_read,
        data_result_din => grp_op_data_exe_wb_fu_112_data_result_din,
        data_result_full_n => data_result_full_n,
        data_result_write => grp_op_data_exe_wb_fu_112_data_result_write);

    grp_data_exe_wb_fu_142 : component ALU_sys_HDL_data_exe_wb
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_data_exe_wb_fu_142_ap_start,
        ap_done => grp_data_exe_wb_fu_142_ap_done,
        ap_idle => grp_data_exe_wb_fu_142_ap_idle,
        ap_ready => grp_data_exe_wb_fu_142_ap_ready,
        m_axi_gmem0_AWVALID => grp_data_exe_wb_fu_142_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => ap_const_logic_0,
        m_axi_gmem0_AWADDR => grp_data_exe_wb_fu_142_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_data_exe_wb_fu_142_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_data_exe_wb_fu_142_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_data_exe_wb_fu_142_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_data_exe_wb_fu_142_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_data_exe_wb_fu_142_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_data_exe_wb_fu_142_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_data_exe_wb_fu_142_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_data_exe_wb_fu_142_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_data_exe_wb_fu_142_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_data_exe_wb_fu_142_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_data_exe_wb_fu_142_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => ap_const_logic_0,
        m_axi_gmem0_WDATA => grp_data_exe_wb_fu_142_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_data_exe_wb_fu_142_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_data_exe_wb_fu_142_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_data_exe_wb_fu_142_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_data_exe_wb_fu_142_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_data_exe_wb_fu_142_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_data_exe_wb_fu_142_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_data_exe_wb_fu_142_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_data_exe_wb_fu_142_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_data_exe_wb_fu_142_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_data_exe_wb_fu_142_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_data_exe_wb_fu_142_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_data_exe_wb_fu_142_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_data_exe_wb_fu_142_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_data_exe_wb_fu_142_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_data_exe_wb_fu_142_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_data_exe_wb_fu_142_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_data_exe_wb_fu_142_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST => m_axi_gmem0_RLAST,
        m_axi_gmem0_RID => m_axi_gmem0_RID,
        m_axi_gmem0_RFIFONUM => m_axi_gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP => m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID => ap_const_logic_0,
        m_axi_gmem0_BREADY => grp_data_exe_wb_fu_142_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        a => a,
        m_axi_gmem1_AWVALID => grp_data_exe_wb_fu_142_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => ap_const_logic_0,
        m_axi_gmem1_AWADDR => grp_data_exe_wb_fu_142_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => grp_data_exe_wb_fu_142_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => grp_data_exe_wb_fu_142_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => grp_data_exe_wb_fu_142_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => grp_data_exe_wb_fu_142_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => grp_data_exe_wb_fu_142_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => grp_data_exe_wb_fu_142_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => grp_data_exe_wb_fu_142_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => grp_data_exe_wb_fu_142_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => grp_data_exe_wb_fu_142_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => grp_data_exe_wb_fu_142_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => grp_data_exe_wb_fu_142_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => ap_const_logic_0,
        m_axi_gmem1_WDATA => grp_data_exe_wb_fu_142_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => grp_data_exe_wb_fu_142_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => grp_data_exe_wb_fu_142_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => grp_data_exe_wb_fu_142_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => grp_data_exe_wb_fu_142_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => grp_data_exe_wb_fu_142_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR => grp_data_exe_wb_fu_142_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => grp_data_exe_wb_fu_142_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => grp_data_exe_wb_fu_142_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => grp_data_exe_wb_fu_142_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => grp_data_exe_wb_fu_142_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => grp_data_exe_wb_fu_142_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => grp_data_exe_wb_fu_142_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => grp_data_exe_wb_fu_142_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => grp_data_exe_wb_fu_142_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => grp_data_exe_wb_fu_142_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => grp_data_exe_wb_fu_142_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY => grp_data_exe_wb_fu_142_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST => m_axi_gmem1_RLAST,
        m_axi_gmem1_RID => m_axi_gmem1_RID,
        m_axi_gmem1_RFIFONUM => m_axi_gmem1_RFIFONUM,
        m_axi_gmem1_RUSER => m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP => m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID => ap_const_logic_0,
        m_axi_gmem1_BREADY => grp_data_exe_wb_fu_142_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => ap_const_lv2_0,
        m_axi_gmem1_BID => ap_const_lv1_0,
        m_axi_gmem1_BUSER => ap_const_lv1_0,
        b => b,
        m_axi_gmem2_AWVALID => grp_data_exe_wb_fu_142_m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY => m_axi_gmem2_AWREADY,
        m_axi_gmem2_AWADDR => grp_data_exe_wb_fu_142_m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID => grp_data_exe_wb_fu_142_m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN => grp_data_exe_wb_fu_142_m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE => grp_data_exe_wb_fu_142_m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST => grp_data_exe_wb_fu_142_m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK => grp_data_exe_wb_fu_142_m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE => grp_data_exe_wb_fu_142_m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT => grp_data_exe_wb_fu_142_m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS => grp_data_exe_wb_fu_142_m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION => grp_data_exe_wb_fu_142_m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER => grp_data_exe_wb_fu_142_m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID => grp_data_exe_wb_fu_142_m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY => m_axi_gmem2_WREADY,
        m_axi_gmem2_WDATA => grp_data_exe_wb_fu_142_m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB => grp_data_exe_wb_fu_142_m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST => grp_data_exe_wb_fu_142_m_axi_gmem2_WLAST,
        m_axi_gmem2_WID => grp_data_exe_wb_fu_142_m_axi_gmem2_WID,
        m_axi_gmem2_WUSER => grp_data_exe_wb_fu_142_m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID => grp_data_exe_wb_fu_142_m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY => ap_const_logic_0,
        m_axi_gmem2_ARADDR => grp_data_exe_wb_fu_142_m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID => grp_data_exe_wb_fu_142_m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN => grp_data_exe_wb_fu_142_m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE => grp_data_exe_wb_fu_142_m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST => grp_data_exe_wb_fu_142_m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK => grp_data_exe_wb_fu_142_m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE => grp_data_exe_wb_fu_142_m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT => grp_data_exe_wb_fu_142_m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS => grp_data_exe_wb_fu_142_m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION => grp_data_exe_wb_fu_142_m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER => grp_data_exe_wb_fu_142_m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID => ap_const_logic_0,
        m_axi_gmem2_RREADY => grp_data_exe_wb_fu_142_m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA => ap_const_lv32_0,
        m_axi_gmem2_RLAST => ap_const_logic_0,
        m_axi_gmem2_RID => ap_const_lv1_0,
        m_axi_gmem2_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem2_RUSER => ap_const_lv1_0,
        m_axi_gmem2_RRESP => ap_const_lv2_0,
        m_axi_gmem2_BVALID => m_axi_gmem2_BVALID,
        m_axi_gmem2_BREADY => grp_data_exe_wb_fu_142_m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP => m_axi_gmem2_BRESP,
        m_axi_gmem2_BID => m_axi_gmem2_BID,
        m_axi_gmem2_BUSER => m_axi_gmem2_BUSER,
        c => c,
        ALU_operation_MEM_address0 => grp_data_exe_wb_fu_142_ALU_operation_MEM_address0,
        ALU_operation_MEM_ce0 => grp_data_exe_wb_fu_142_ALU_operation_MEM_ce0,
        ALU_operation_MEM_q0 => ALU_operation_MEM_q0,
        data_a_dout => data_a_dout,
        data_a_empty_n => data_a_empty_n,
        data_a_read => grp_data_exe_wb_fu_142_data_a_read,
        data_a_din => grp_data_exe_wb_fu_142_data_a_din,
        data_a_full_n => data_a_full_n,
        data_a_write => grp_data_exe_wb_fu_142_data_a_write,
        data_b_dout => data_b_dout,
        data_b_empty_n => data_b_empty_n,
        data_b_read => grp_data_exe_wb_fu_142_data_b_read,
        data_b_din => grp_data_exe_wb_fu_142_data_b_din,
        data_b_full_n => data_b_full_n,
        data_b_write => grp_data_exe_wb_fu_142_data_b_write,
        data_result_dout => data_result_dout,
        data_result_empty_n => data_result_empty_n,
        data_result_read => grp_data_exe_wb_fu_142_data_result_read,
        data_result_din => grp_data_exe_wb_fu_142_data_result_din,
        data_result_full_n => data_result_full_n,
        data_result_write => grp_data_exe_wb_fu_142_data_result_write);

    grp_operation_fu_166 : component ALU_sys_HDL_operation
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operation_fu_166_ap_start,
        ap_done => grp_operation_fu_166_ap_done,
        ap_idle => grp_operation_fu_166_ap_idle,
        ap_ready => grp_operation_fu_166_ap_ready,
        m_axi_gmem3_AWVALID => grp_operation_fu_166_m_axi_gmem3_AWVALID,
        m_axi_gmem3_AWREADY => ap_const_logic_0,
        m_axi_gmem3_AWADDR => grp_operation_fu_166_m_axi_gmem3_AWADDR,
        m_axi_gmem3_AWID => grp_operation_fu_166_m_axi_gmem3_AWID,
        m_axi_gmem3_AWLEN => grp_operation_fu_166_m_axi_gmem3_AWLEN,
        m_axi_gmem3_AWSIZE => grp_operation_fu_166_m_axi_gmem3_AWSIZE,
        m_axi_gmem3_AWBURST => grp_operation_fu_166_m_axi_gmem3_AWBURST,
        m_axi_gmem3_AWLOCK => grp_operation_fu_166_m_axi_gmem3_AWLOCK,
        m_axi_gmem3_AWCACHE => grp_operation_fu_166_m_axi_gmem3_AWCACHE,
        m_axi_gmem3_AWPROT => grp_operation_fu_166_m_axi_gmem3_AWPROT,
        m_axi_gmem3_AWQOS => grp_operation_fu_166_m_axi_gmem3_AWQOS,
        m_axi_gmem3_AWREGION => grp_operation_fu_166_m_axi_gmem3_AWREGION,
        m_axi_gmem3_AWUSER => grp_operation_fu_166_m_axi_gmem3_AWUSER,
        m_axi_gmem3_WVALID => grp_operation_fu_166_m_axi_gmem3_WVALID,
        m_axi_gmem3_WREADY => ap_const_logic_0,
        m_axi_gmem3_WDATA => grp_operation_fu_166_m_axi_gmem3_WDATA,
        m_axi_gmem3_WSTRB => grp_operation_fu_166_m_axi_gmem3_WSTRB,
        m_axi_gmem3_WLAST => grp_operation_fu_166_m_axi_gmem3_WLAST,
        m_axi_gmem3_WID => grp_operation_fu_166_m_axi_gmem3_WID,
        m_axi_gmem3_WUSER => grp_operation_fu_166_m_axi_gmem3_WUSER,
        m_axi_gmem3_ARVALID => grp_operation_fu_166_m_axi_gmem3_ARVALID,
        m_axi_gmem3_ARREADY => m_axi_gmem3_ARREADY,
        m_axi_gmem3_ARADDR => grp_operation_fu_166_m_axi_gmem3_ARADDR,
        m_axi_gmem3_ARID => grp_operation_fu_166_m_axi_gmem3_ARID,
        m_axi_gmem3_ARLEN => grp_operation_fu_166_m_axi_gmem3_ARLEN,
        m_axi_gmem3_ARSIZE => grp_operation_fu_166_m_axi_gmem3_ARSIZE,
        m_axi_gmem3_ARBURST => grp_operation_fu_166_m_axi_gmem3_ARBURST,
        m_axi_gmem3_ARLOCK => grp_operation_fu_166_m_axi_gmem3_ARLOCK,
        m_axi_gmem3_ARCACHE => grp_operation_fu_166_m_axi_gmem3_ARCACHE,
        m_axi_gmem3_ARPROT => grp_operation_fu_166_m_axi_gmem3_ARPROT,
        m_axi_gmem3_ARQOS => grp_operation_fu_166_m_axi_gmem3_ARQOS,
        m_axi_gmem3_ARREGION => grp_operation_fu_166_m_axi_gmem3_ARREGION,
        m_axi_gmem3_ARUSER => grp_operation_fu_166_m_axi_gmem3_ARUSER,
        m_axi_gmem3_RVALID => m_axi_gmem3_RVALID,
        m_axi_gmem3_RREADY => grp_operation_fu_166_m_axi_gmem3_RREADY,
        m_axi_gmem3_RDATA => m_axi_gmem3_RDATA,
        m_axi_gmem3_RLAST => m_axi_gmem3_RLAST,
        m_axi_gmem3_RID => m_axi_gmem3_RID,
        m_axi_gmem3_RFIFONUM => m_axi_gmem3_RFIFONUM,
        m_axi_gmem3_RUSER => m_axi_gmem3_RUSER,
        m_axi_gmem3_RRESP => m_axi_gmem3_RRESP,
        m_axi_gmem3_BVALID => ap_const_logic_0,
        m_axi_gmem3_BREADY => grp_operation_fu_166_m_axi_gmem3_BREADY,
        m_axi_gmem3_BRESP => ap_const_lv2_0,
        m_axi_gmem3_BID => ap_const_lv1_0,
        m_axi_gmem3_BUSER => ap_const_lv1_0,
        op => op,
        ALU_operation_MEM_address0 => grp_operation_fu_166_ALU_operation_MEM_address0,
        ALU_operation_MEM_ce0 => grp_operation_fu_166_ALU_operation_MEM_ce0,
        ALU_operation_MEM_we0 => grp_operation_fu_166_ALU_operation_MEM_we0,
        ALU_operation_MEM_d0 => grp_operation_fu_166_ALU_operation_MEM_d0,
        ALU_operation_dout => ALU_operation_dout,
        ALU_operation_empty_n => ALU_operation_empty_n,
        ALU_operation_read => grp_operation_fu_166_ALU_operation_read,
        ALU_operation_din => grp_operation_fu_166_ALU_operation_din,
        ALU_operation_full_n => ALU_operation_full_n,
        ALU_operation_write => grp_operation_fu_166_ALU_operation_write);

    grp_reset_fu_178 : component ALU_sys_HDL_reset
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reset_fu_178_ap_start,
        ap_done => grp_reset_fu_178_ap_done,
        ap_idle => grp_reset_fu_178_ap_idle,
        ap_ready => grp_reset_fu_178_ap_ready,
        data_a_dout => data_a_dout,
        data_a_empty_n => data_a_empty_n,
        data_a_read => grp_reset_fu_178_data_a_read,
        data_b_dout => data_b_dout,
        data_b_empty_n => data_b_empty_n,
        data_b_read => grp_reset_fu_178_data_b_read,
        ALU_operation_dout => ALU_operation_dout,
        ALU_operation_empty_n => ALU_operation_empty_n,
        ALU_operation_read => grp_reset_fu_178_ALU_operation_read,
        ALU_operation_MEM_address0 => grp_reset_fu_178_ALU_operation_MEM_address0,
        ALU_operation_MEM_ce0 => grp_reset_fu_178_ALU_operation_MEM_ce0,
        ALU_operation_MEM_we0 => grp_reset_fu_178_ALU_operation_MEM_we0,
        ALU_operation_MEM_d0 => grp_reset_fu_178_ALU_operation_MEM_d0);

    ALU_operation_fifo_U : component ALU_sys_HDL_fifo_w32_d400_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ALU_operation_din,
        if_full_n => ALU_operation_full_n,
        if_write => ALU_operation_write,
        if_dout => ALU_operation_dout,
        if_empty_n => ALU_operation_empty_n,
        if_read => ALU_operation_read);

    data_a_fifo_U : component ALU_sys_HDL_fifo_w32_d400_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_a_din,
        if_full_n => data_a_full_n,
        if_write => data_a_write,
        if_dout => data_a_dout,
        if_empty_n => data_a_empty_n,
        if_read => data_a_read);

    data_b_fifo_U : component ALU_sys_HDL_fifo_w32_d400_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_b_din,
        if_full_n => data_b_full_n,
        if_write => data_b_write,
        if_dout => data_b_dout,
        if_empty_n => data_b_empty_n,
        if_read => data_b_read);

    data_result_fifo_U : component ALU_sys_HDL_fifo_w32_d400_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_result_din,
        if_full_n => data_result_full_n,
        if_write => data_result_write,
        if_dout => data_result_dout,
        if_empty_n => data_result_empty_n,
        if_read => data_result_read);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_data_exe_wb_fu_142_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_data_exe_wb_fu_142_ap_start_reg <= ap_const_logic_0;
            else
                if (((selec = ap_const_lv32_1) and (ap_const_boolean_0 = ap_block_state1_ignore_call0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_data_exe_wb_fu_142_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_data_exe_wb_fu_142_ap_ready = ap_const_logic_1)) then 
                    grp_data_exe_wb_fu_142_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_op_data_exe_wb_fu_112_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_op_data_exe_wb_fu_112_ap_start_reg <= ap_const_logic_0;
            else
                if (((selec = ap_const_lv32_2) and (ap_const_boolean_0 = ap_block_state1_ignore_call0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_op_data_exe_wb_fu_112_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_op_data_exe_wb_fu_112_ap_ready = ap_const_logic_1)) then 
                    grp_op_data_exe_wb_fu_112_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operation_fu_166_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operation_fu_166_ap_start_reg <= ap_const_logic_0;
            else
                if (((selec = ap_const_lv32_0) and (ap_const_boolean_0 = ap_block_state1_ignore_call0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_operation_fu_166_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operation_fu_166_ap_ready = ap_const_logic_1)) then 
                    grp_operation_fu_166_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_reset_fu_178_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reset_fu_178_ap_start_reg <= ap_const_logic_0;
            else
                if ((not((selec = ap_const_lv32_0)) and not((selec = ap_const_lv32_1)) and not((selec = ap_const_lv32_2)) and (ap_const_boolean_0 = ap_block_state1_ignore_call0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_reset_fu_178_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reset_fu_178_ap_ready = ap_const_logic_1)) then 
                    grp_reset_fu_178_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_block_state1, ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;

    ALU_operation_MEM_address0_assign_proc : process(selec, grp_op_data_exe_wb_fu_112_ALU_operation_MEM_address0, grp_data_exe_wb_fu_142_ALU_operation_MEM_address0, grp_operation_fu_166_ALU_operation_MEM_address0, grp_reset_fu_178_ALU_operation_MEM_address0, ap_CS_fsm_state2, ap_condition_811)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((ap_const_boolean_1 = ap_condition_811)) then 
                ALU_operation_MEM_address0 <= grp_reset_fu_178_ALU_operation_MEM_address0;
            elsif ((selec = ap_const_lv32_0)) then 
                ALU_operation_MEM_address0 <= grp_operation_fu_166_ALU_operation_MEM_address0;
            elsif ((selec = ap_const_lv32_1)) then 
                ALU_operation_MEM_address0 <= grp_data_exe_wb_fu_142_ALU_operation_MEM_address0;
            elsif ((selec = ap_const_lv32_2)) then 
                ALU_operation_MEM_address0 <= grp_op_data_exe_wb_fu_112_ALU_operation_MEM_address0;
            else 
                ALU_operation_MEM_address0 <= "XXXXXXXXX";
            end if;
        else 
            ALU_operation_MEM_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    ALU_operation_MEM_ce0_assign_proc : process(selec, grp_op_data_exe_wb_fu_112_ALU_operation_MEM_ce0, grp_data_exe_wb_fu_142_ALU_operation_MEM_ce0, grp_operation_fu_166_ALU_operation_MEM_ce0, grp_reset_fu_178_ALU_operation_MEM_ce0, ap_CS_fsm_state2, ap_condition_811)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((ap_const_boolean_1 = ap_condition_811)) then 
                ALU_operation_MEM_ce0 <= grp_reset_fu_178_ALU_operation_MEM_ce0;
            elsif ((selec = ap_const_lv32_0)) then 
                ALU_operation_MEM_ce0 <= grp_operation_fu_166_ALU_operation_MEM_ce0;
            elsif ((selec = ap_const_lv32_1)) then 
                ALU_operation_MEM_ce0 <= grp_data_exe_wb_fu_142_ALU_operation_MEM_ce0;
            elsif ((selec = ap_const_lv32_2)) then 
                ALU_operation_MEM_ce0 <= grp_op_data_exe_wb_fu_112_ALU_operation_MEM_ce0;
            else 
                ALU_operation_MEM_ce0 <= ap_const_logic_0;
            end if;
        else 
            ALU_operation_MEM_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ALU_operation_MEM_d0_assign_proc : process(selec, grp_op_data_exe_wb_fu_112_ALU_operation_MEM_d0, grp_operation_fu_166_ALU_operation_MEM_d0, grp_reset_fu_178_ALU_operation_MEM_d0, ap_CS_fsm_state2, ap_condition_811)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((ap_const_boolean_1 = ap_condition_811)) then 
                ALU_operation_MEM_d0 <= grp_reset_fu_178_ALU_operation_MEM_d0;
            elsif ((selec = ap_const_lv32_0)) then 
                ALU_operation_MEM_d0 <= grp_operation_fu_166_ALU_operation_MEM_d0;
            elsif ((selec = ap_const_lv32_2)) then 
                ALU_operation_MEM_d0 <= grp_op_data_exe_wb_fu_112_ALU_operation_MEM_d0;
            else 
                ALU_operation_MEM_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ALU_operation_MEM_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ALU_operation_MEM_we0_assign_proc : process(selec, grp_op_data_exe_wb_fu_112_ALU_operation_MEM_we0, grp_operation_fu_166_ALU_operation_MEM_we0, grp_reset_fu_178_ALU_operation_MEM_we0, ap_CS_fsm_state2, ap_condition_811)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((ap_const_boolean_1 = ap_condition_811)) then 
                ALU_operation_MEM_we0 <= grp_reset_fu_178_ALU_operation_MEM_we0;
            elsif ((selec = ap_const_lv32_0)) then 
                ALU_operation_MEM_we0 <= grp_operation_fu_166_ALU_operation_MEM_we0;
            elsif ((selec = ap_const_lv32_2)) then 
                ALU_operation_MEM_we0 <= grp_op_data_exe_wb_fu_112_ALU_operation_MEM_we0;
            else 
                ALU_operation_MEM_we0 <= ap_const_logic_0;
            end if;
        else 
            ALU_operation_MEM_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ALU_operation_din_assign_proc : process(selec, grp_op_data_exe_wb_fu_112_ALU_operation_din, grp_operation_fu_166_ALU_operation_din, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((selec = ap_const_lv32_0)) then 
                ALU_operation_din <= grp_operation_fu_166_ALU_operation_din;
            elsif ((selec = ap_const_lv32_2)) then 
                ALU_operation_din <= grp_op_data_exe_wb_fu_112_ALU_operation_din;
            else 
                ALU_operation_din <= grp_operation_fu_166_ALU_operation_din;
            end if;
        else 
            ALU_operation_din <= grp_operation_fu_166_ALU_operation_din;
        end if; 
    end process;


    ALU_operation_read_assign_proc : process(selec, grp_op_data_exe_wb_fu_112_ALU_operation_read, grp_operation_fu_166_ALU_operation_read, grp_reset_fu_178_ALU_operation_read, ap_CS_fsm_state2, ap_condition_811)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((ap_const_boolean_1 = ap_condition_811)) then 
                ALU_operation_read <= grp_reset_fu_178_ALU_operation_read;
            elsif ((selec = ap_const_lv32_0)) then 
                ALU_operation_read <= grp_operation_fu_166_ALU_operation_read;
            elsif ((selec = ap_const_lv32_2)) then 
                ALU_operation_read <= grp_op_data_exe_wb_fu_112_ALU_operation_read;
            else 
                ALU_operation_read <= ap_const_logic_0;
            end if;
        else 
            ALU_operation_read <= ap_const_logic_0;
        end if; 
    end process;


    ALU_operation_write_assign_proc : process(selec, grp_op_data_exe_wb_fu_112_ALU_operation_write, grp_operation_fu_166_ALU_operation_write, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((selec = ap_const_lv32_0)) then 
                ALU_operation_write <= grp_operation_fu_166_ALU_operation_write;
            elsif ((selec = ap_const_lv32_2)) then 
                ALU_operation_write <= grp_op_data_exe_wb_fu_112_ALU_operation_write;
            else 
                ALU_operation_write <= ap_const_logic_0;
            end if;
        else 
            ALU_operation_write <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_ignore_call0_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(selec, grp_op_data_exe_wb_fu_112_ap_done, grp_data_exe_wb_fu_142_ap_done, grp_operation_fu_166_ap_done, grp_reset_fu_178_ap_done, ap_predicate_op31_call_state2)
    begin
                ap_block_state2_on_subcall_done <= (((ap_predicate_op31_call_state2 = ap_const_boolean_1) and (grp_reset_fu_178_ap_done = ap_const_logic_0)) or ((grp_operation_fu_166_ap_done = ap_const_logic_0) and (selec = ap_const_lv32_0)) or ((grp_data_exe_wb_fu_142_ap_done = ap_const_logic_0) and (selec = ap_const_lv32_1)) or ((grp_op_data_exe_wb_fu_112_ap_done = ap_const_logic_0) and (selec = ap_const_lv32_2)));
    end process;


    ap_condition_811_assign_proc : process(selec)
    begin
                ap_condition_811 <= (not((selec = ap_const_lv32_0)) and not((selec = ap_const_lv32_1)) and not((selec = ap_const_lv32_2)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op31_call_state2_assign_proc : process(selec)
    begin
                ap_predicate_op31_call_state2 <= (not((selec = ap_const_lv32_0)) and not((selec = ap_const_lv32_1)) and not((selec = ap_const_lv32_2)));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    data_a_din_assign_proc : process(selec, grp_op_data_exe_wb_fu_112_data_a_din, grp_data_exe_wb_fu_142_data_a_din, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((selec = ap_const_lv32_1)) then 
                data_a_din <= grp_data_exe_wb_fu_142_data_a_din;
            elsif ((selec = ap_const_lv32_2)) then 
                data_a_din <= grp_op_data_exe_wb_fu_112_data_a_din;
            else 
                data_a_din <= grp_data_exe_wb_fu_142_data_a_din;
            end if;
        else 
            data_a_din <= grp_data_exe_wb_fu_142_data_a_din;
        end if; 
    end process;


    data_a_read_assign_proc : process(selec, grp_op_data_exe_wb_fu_112_data_a_read, grp_data_exe_wb_fu_142_data_a_read, grp_reset_fu_178_data_a_read, ap_CS_fsm_state2, ap_condition_811)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((ap_const_boolean_1 = ap_condition_811)) then 
                data_a_read <= grp_reset_fu_178_data_a_read;
            elsif ((selec = ap_const_lv32_1)) then 
                data_a_read <= grp_data_exe_wb_fu_142_data_a_read;
            elsif ((selec = ap_const_lv32_2)) then 
                data_a_read <= grp_op_data_exe_wb_fu_112_data_a_read;
            else 
                data_a_read <= ap_const_logic_0;
            end if;
        else 
            data_a_read <= ap_const_logic_0;
        end if; 
    end process;


    data_a_write_assign_proc : process(selec, grp_op_data_exe_wb_fu_112_data_a_write, grp_data_exe_wb_fu_142_data_a_write, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((selec = ap_const_lv32_1)) then 
                data_a_write <= grp_data_exe_wb_fu_142_data_a_write;
            elsif ((selec = ap_const_lv32_2)) then 
                data_a_write <= grp_op_data_exe_wb_fu_112_data_a_write;
            else 
                data_a_write <= ap_const_logic_0;
            end if;
        else 
            data_a_write <= ap_const_logic_0;
        end if; 
    end process;


    data_b_din_assign_proc : process(selec, grp_op_data_exe_wb_fu_112_data_b_din, grp_data_exe_wb_fu_142_data_b_din, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((selec = ap_const_lv32_1)) then 
                data_b_din <= grp_data_exe_wb_fu_142_data_b_din;
            elsif ((selec = ap_const_lv32_2)) then 
                data_b_din <= grp_op_data_exe_wb_fu_112_data_b_din;
            else 
                data_b_din <= grp_data_exe_wb_fu_142_data_b_din;
            end if;
        else 
            data_b_din <= grp_data_exe_wb_fu_142_data_b_din;
        end if; 
    end process;


    data_b_read_assign_proc : process(selec, grp_op_data_exe_wb_fu_112_data_b_read, grp_data_exe_wb_fu_142_data_b_read, grp_reset_fu_178_data_b_read, ap_CS_fsm_state2, ap_condition_811)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((ap_const_boolean_1 = ap_condition_811)) then 
                data_b_read <= grp_reset_fu_178_data_b_read;
            elsif ((selec = ap_const_lv32_1)) then 
                data_b_read <= grp_data_exe_wb_fu_142_data_b_read;
            elsif ((selec = ap_const_lv32_2)) then 
                data_b_read <= grp_op_data_exe_wb_fu_112_data_b_read;
            else 
                data_b_read <= ap_const_logic_0;
            end if;
        else 
            data_b_read <= ap_const_logic_0;
        end if; 
    end process;


    data_b_write_assign_proc : process(selec, grp_op_data_exe_wb_fu_112_data_b_write, grp_data_exe_wb_fu_142_data_b_write, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((selec = ap_const_lv32_1)) then 
                data_b_write <= grp_data_exe_wb_fu_142_data_b_write;
            elsif ((selec = ap_const_lv32_2)) then 
                data_b_write <= grp_op_data_exe_wb_fu_112_data_b_write;
            else 
                data_b_write <= ap_const_logic_0;
            end if;
        else 
            data_b_write <= ap_const_logic_0;
        end if; 
    end process;


    data_result_din_assign_proc : process(selec, grp_op_data_exe_wb_fu_112_data_result_din, grp_data_exe_wb_fu_142_data_result_din, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((selec = ap_const_lv32_1)) then 
                data_result_din <= grp_data_exe_wb_fu_142_data_result_din;
            elsif ((selec = ap_const_lv32_2)) then 
                data_result_din <= grp_op_data_exe_wb_fu_112_data_result_din;
            else 
                data_result_din <= grp_data_exe_wb_fu_142_data_result_din;
            end if;
        else 
            data_result_din <= grp_data_exe_wb_fu_142_data_result_din;
        end if; 
    end process;


    data_result_read_assign_proc : process(selec, grp_op_data_exe_wb_fu_112_data_result_read, grp_data_exe_wb_fu_142_data_result_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((selec = ap_const_lv32_1)) then 
                data_result_read <= grp_data_exe_wb_fu_142_data_result_read;
            elsif ((selec = ap_const_lv32_2)) then 
                data_result_read <= grp_op_data_exe_wb_fu_112_data_result_read;
            else 
                data_result_read <= ap_const_logic_0;
            end if;
        else 
            data_result_read <= ap_const_logic_0;
        end if; 
    end process;


    data_result_write_assign_proc : process(selec, grp_op_data_exe_wb_fu_112_data_result_write, grp_data_exe_wb_fu_142_data_result_write, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((selec = ap_const_lv32_1)) then 
                data_result_write <= grp_data_exe_wb_fu_142_data_result_write;
            elsif ((selec = ap_const_lv32_2)) then 
                data_result_write <= grp_op_data_exe_wb_fu_112_data_result_write;
            else 
                data_result_write <= ap_const_logic_0;
            end if;
        else 
            data_result_write <= ap_const_logic_0;
        end if; 
    end process;

    grp_data_exe_wb_fu_142_ap_start <= grp_data_exe_wb_fu_142_ap_start_reg;
    grp_op_data_exe_wb_fu_112_ap_start <= grp_op_data_exe_wb_fu_112_ap_start_reg;
    grp_operation_fu_166_ap_start <= grp_operation_fu_166_ap_start_reg;
    grp_reset_fu_178_ap_start <= grp_reset_fu_178_ap_start_reg;

    m_axi_gmem0_ARADDR_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARADDR, grp_data_exe_wb_fu_142_m_axi_gmem0_ARADDR, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARADDR <= grp_data_exe_wb_fu_142_m_axi_gmem0_ARADDR;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARADDR <= grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARADDR;
        else 
            m_axi_gmem0_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem0_ARBURST_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARBURST, grp_data_exe_wb_fu_142_m_axi_gmem0_ARBURST, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARBURST <= grp_data_exe_wb_fu_142_m_axi_gmem0_ARBURST;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARBURST <= grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARBURST;
        else 
            m_axi_gmem0_ARBURST <= "XX";
        end if; 
    end process;


    m_axi_gmem0_ARCACHE_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARCACHE, grp_data_exe_wb_fu_142_m_axi_gmem0_ARCACHE, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARCACHE <= grp_data_exe_wb_fu_142_m_axi_gmem0_ARCACHE;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARCACHE <= grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARCACHE;
        else 
            m_axi_gmem0_ARCACHE <= "XXXX";
        end if; 
    end process;


    m_axi_gmem0_ARID_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARID, grp_data_exe_wb_fu_142_m_axi_gmem0_ARID, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARID <= grp_data_exe_wb_fu_142_m_axi_gmem0_ARID;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARID <= grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARID;
        else 
            m_axi_gmem0_ARID <= "X";
        end if; 
    end process;


    m_axi_gmem0_ARLEN_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARLEN, grp_data_exe_wb_fu_142_m_axi_gmem0_ARLEN, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARLEN <= grp_data_exe_wb_fu_142_m_axi_gmem0_ARLEN;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARLEN <= grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARLEN;
        else 
            m_axi_gmem0_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem0_ARLOCK_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARLOCK, grp_data_exe_wb_fu_142_m_axi_gmem0_ARLOCK, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARLOCK <= grp_data_exe_wb_fu_142_m_axi_gmem0_ARLOCK;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARLOCK <= grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARLOCK;
        else 
            m_axi_gmem0_ARLOCK <= "XX";
        end if; 
    end process;


    m_axi_gmem0_ARPROT_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARPROT, grp_data_exe_wb_fu_142_m_axi_gmem0_ARPROT, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARPROT <= grp_data_exe_wb_fu_142_m_axi_gmem0_ARPROT;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARPROT <= grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARPROT;
        else 
            m_axi_gmem0_ARPROT <= "XXX";
        end if; 
    end process;


    m_axi_gmem0_ARQOS_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARQOS, grp_data_exe_wb_fu_142_m_axi_gmem0_ARQOS, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARQOS <= grp_data_exe_wb_fu_142_m_axi_gmem0_ARQOS;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARQOS <= grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARQOS;
        else 
            m_axi_gmem0_ARQOS <= "XXXX";
        end if; 
    end process;


    m_axi_gmem0_ARREGION_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARREGION, grp_data_exe_wb_fu_142_m_axi_gmem0_ARREGION, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARREGION <= grp_data_exe_wb_fu_142_m_axi_gmem0_ARREGION;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARREGION <= grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARREGION;
        else 
            m_axi_gmem0_ARREGION <= "XXXX";
        end if; 
    end process;


    m_axi_gmem0_ARSIZE_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARSIZE, grp_data_exe_wb_fu_142_m_axi_gmem0_ARSIZE, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARSIZE <= grp_data_exe_wb_fu_142_m_axi_gmem0_ARSIZE;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARSIZE <= grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARSIZE;
        else 
            m_axi_gmem0_ARSIZE <= "XXX";
        end if; 
    end process;


    m_axi_gmem0_ARUSER_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARUSER, grp_data_exe_wb_fu_142_m_axi_gmem0_ARUSER, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARUSER <= grp_data_exe_wb_fu_142_m_axi_gmem0_ARUSER;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARUSER <= grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARUSER;
        else 
            m_axi_gmem0_ARUSER <= "X";
        end if; 
    end process;


    m_axi_gmem0_ARVALID_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARVALID, grp_data_exe_wb_fu_142_m_axi_gmem0_ARVALID, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARVALID <= grp_data_exe_wb_fu_142_m_axi_gmem0_ARVALID;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_ARVALID <= grp_op_data_exe_wb_fu_112_m_axi_gmem0_ARVALID;
        else 
            m_axi_gmem0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_AWADDR <= ap_const_lv64_0;
    m_axi_gmem0_AWBURST <= ap_const_lv2_0;
    m_axi_gmem0_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem0_AWID <= ap_const_lv1_0;
    m_axi_gmem0_AWLEN <= ap_const_lv32_0;
    m_axi_gmem0_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem0_AWPROT <= ap_const_lv3_0;
    m_axi_gmem0_AWQOS <= ap_const_lv4_0;
    m_axi_gmem0_AWREGION <= ap_const_lv4_0;
    m_axi_gmem0_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem0_AWUSER <= ap_const_lv1_0;
    m_axi_gmem0_AWVALID <= ap_const_logic_0;
    m_axi_gmem0_BREADY <= ap_const_logic_0;

    m_axi_gmem0_RREADY_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem0_RREADY, grp_data_exe_wb_fu_142_m_axi_gmem0_RREADY, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_RREADY <= grp_data_exe_wb_fu_142_m_axi_gmem0_RREADY;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem0_RREADY <= grp_op_data_exe_wb_fu_112_m_axi_gmem0_RREADY;
        else 
            m_axi_gmem0_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_WDATA <= ap_const_lv32_0;
    m_axi_gmem0_WID <= ap_const_lv1_0;
    m_axi_gmem0_WLAST <= ap_const_logic_0;
    m_axi_gmem0_WSTRB <= ap_const_lv4_0;
    m_axi_gmem0_WUSER <= ap_const_lv1_0;
    m_axi_gmem0_WVALID <= ap_const_logic_0;

    m_axi_gmem1_ARADDR_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARADDR, grp_data_exe_wb_fu_142_m_axi_gmem1_ARADDR, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARADDR <= grp_data_exe_wb_fu_142_m_axi_gmem1_ARADDR;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARADDR <= grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARADDR;
        else 
            m_axi_gmem1_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem1_ARBURST_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARBURST, grp_data_exe_wb_fu_142_m_axi_gmem1_ARBURST, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARBURST <= grp_data_exe_wb_fu_142_m_axi_gmem1_ARBURST;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARBURST <= grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARBURST;
        else 
            m_axi_gmem1_ARBURST <= "XX";
        end if; 
    end process;


    m_axi_gmem1_ARCACHE_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARCACHE, grp_data_exe_wb_fu_142_m_axi_gmem1_ARCACHE, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARCACHE <= grp_data_exe_wb_fu_142_m_axi_gmem1_ARCACHE;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARCACHE <= grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARCACHE;
        else 
            m_axi_gmem1_ARCACHE <= "XXXX";
        end if; 
    end process;


    m_axi_gmem1_ARID_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARID, grp_data_exe_wb_fu_142_m_axi_gmem1_ARID, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARID <= grp_data_exe_wb_fu_142_m_axi_gmem1_ARID;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARID <= grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARID;
        else 
            m_axi_gmem1_ARID <= "X";
        end if; 
    end process;


    m_axi_gmem1_ARLEN_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARLEN, grp_data_exe_wb_fu_142_m_axi_gmem1_ARLEN, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARLEN <= grp_data_exe_wb_fu_142_m_axi_gmem1_ARLEN;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARLEN <= grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARLEN;
        else 
            m_axi_gmem1_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem1_ARLOCK_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARLOCK, grp_data_exe_wb_fu_142_m_axi_gmem1_ARLOCK, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARLOCK <= grp_data_exe_wb_fu_142_m_axi_gmem1_ARLOCK;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARLOCK <= grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARLOCK;
        else 
            m_axi_gmem1_ARLOCK <= "XX";
        end if; 
    end process;


    m_axi_gmem1_ARPROT_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARPROT, grp_data_exe_wb_fu_142_m_axi_gmem1_ARPROT, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARPROT <= grp_data_exe_wb_fu_142_m_axi_gmem1_ARPROT;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARPROT <= grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARPROT;
        else 
            m_axi_gmem1_ARPROT <= "XXX";
        end if; 
    end process;


    m_axi_gmem1_ARQOS_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARQOS, grp_data_exe_wb_fu_142_m_axi_gmem1_ARQOS, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARQOS <= grp_data_exe_wb_fu_142_m_axi_gmem1_ARQOS;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARQOS <= grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARQOS;
        else 
            m_axi_gmem1_ARQOS <= "XXXX";
        end if; 
    end process;


    m_axi_gmem1_ARREGION_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARREGION, grp_data_exe_wb_fu_142_m_axi_gmem1_ARREGION, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARREGION <= grp_data_exe_wb_fu_142_m_axi_gmem1_ARREGION;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARREGION <= grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARREGION;
        else 
            m_axi_gmem1_ARREGION <= "XXXX";
        end if; 
    end process;


    m_axi_gmem1_ARSIZE_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARSIZE, grp_data_exe_wb_fu_142_m_axi_gmem1_ARSIZE, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARSIZE <= grp_data_exe_wb_fu_142_m_axi_gmem1_ARSIZE;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARSIZE <= grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARSIZE;
        else 
            m_axi_gmem1_ARSIZE <= "XXX";
        end if; 
    end process;


    m_axi_gmem1_ARUSER_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARUSER, grp_data_exe_wb_fu_142_m_axi_gmem1_ARUSER, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARUSER <= grp_data_exe_wb_fu_142_m_axi_gmem1_ARUSER;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARUSER <= grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARUSER;
        else 
            m_axi_gmem1_ARUSER <= "X";
        end if; 
    end process;


    m_axi_gmem1_ARVALID_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARVALID, grp_data_exe_wb_fu_142_m_axi_gmem1_ARVALID, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARVALID <= grp_data_exe_wb_fu_142_m_axi_gmem1_ARVALID;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_ARVALID <= grp_op_data_exe_wb_fu_112_m_axi_gmem1_ARVALID;
        else 
            m_axi_gmem1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem1_AWADDR <= ap_const_lv64_0;
    m_axi_gmem1_AWBURST <= ap_const_lv2_0;
    m_axi_gmem1_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem1_AWID <= ap_const_lv1_0;
    m_axi_gmem1_AWLEN <= ap_const_lv32_0;
    m_axi_gmem1_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem1_AWPROT <= ap_const_lv3_0;
    m_axi_gmem1_AWQOS <= ap_const_lv4_0;
    m_axi_gmem1_AWREGION <= ap_const_lv4_0;
    m_axi_gmem1_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem1_AWUSER <= ap_const_lv1_0;
    m_axi_gmem1_AWVALID <= ap_const_logic_0;
    m_axi_gmem1_BREADY <= ap_const_logic_0;

    m_axi_gmem1_RREADY_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem1_RREADY, grp_data_exe_wb_fu_142_m_axi_gmem1_RREADY, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_RREADY <= grp_data_exe_wb_fu_142_m_axi_gmem1_RREADY;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem1_RREADY <= grp_op_data_exe_wb_fu_112_m_axi_gmem1_RREADY;
        else 
            m_axi_gmem1_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem1_WDATA <= ap_const_lv32_0;
    m_axi_gmem1_WID <= ap_const_lv1_0;
    m_axi_gmem1_WLAST <= ap_const_logic_0;
    m_axi_gmem1_WSTRB <= ap_const_lv4_0;
    m_axi_gmem1_WUSER <= ap_const_lv1_0;
    m_axi_gmem1_WVALID <= ap_const_logic_0;
    m_axi_gmem2_ARADDR <= ap_const_lv64_0;
    m_axi_gmem2_ARBURST <= ap_const_lv2_0;
    m_axi_gmem2_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem2_ARID <= ap_const_lv1_0;
    m_axi_gmem2_ARLEN <= ap_const_lv32_0;
    m_axi_gmem2_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem2_ARPROT <= ap_const_lv3_0;
    m_axi_gmem2_ARQOS <= ap_const_lv4_0;
    m_axi_gmem2_ARREGION <= ap_const_lv4_0;
    m_axi_gmem2_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem2_ARUSER <= ap_const_lv1_0;
    m_axi_gmem2_ARVALID <= ap_const_logic_0;

    m_axi_gmem2_AWADDR_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWADDR, grp_data_exe_wb_fu_142_m_axi_gmem2_AWADDR, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWADDR <= grp_data_exe_wb_fu_142_m_axi_gmem2_AWADDR;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWADDR <= grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWADDR;
        else 
            m_axi_gmem2_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem2_AWBURST_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWBURST, grp_data_exe_wb_fu_142_m_axi_gmem2_AWBURST, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWBURST <= grp_data_exe_wb_fu_142_m_axi_gmem2_AWBURST;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWBURST <= grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWBURST;
        else 
            m_axi_gmem2_AWBURST <= "XX";
        end if; 
    end process;


    m_axi_gmem2_AWCACHE_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWCACHE, grp_data_exe_wb_fu_142_m_axi_gmem2_AWCACHE, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWCACHE <= grp_data_exe_wb_fu_142_m_axi_gmem2_AWCACHE;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWCACHE <= grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWCACHE;
        else 
            m_axi_gmem2_AWCACHE <= "XXXX";
        end if; 
    end process;


    m_axi_gmem2_AWID_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWID, grp_data_exe_wb_fu_142_m_axi_gmem2_AWID, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWID <= grp_data_exe_wb_fu_142_m_axi_gmem2_AWID;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWID <= grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWID;
        else 
            m_axi_gmem2_AWID <= "X";
        end if; 
    end process;


    m_axi_gmem2_AWLEN_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWLEN, grp_data_exe_wb_fu_142_m_axi_gmem2_AWLEN, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWLEN <= grp_data_exe_wb_fu_142_m_axi_gmem2_AWLEN;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWLEN <= grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWLEN;
        else 
            m_axi_gmem2_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem2_AWLOCK_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWLOCK, grp_data_exe_wb_fu_142_m_axi_gmem2_AWLOCK, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWLOCK <= grp_data_exe_wb_fu_142_m_axi_gmem2_AWLOCK;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWLOCK <= grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWLOCK;
        else 
            m_axi_gmem2_AWLOCK <= "XX";
        end if; 
    end process;


    m_axi_gmem2_AWPROT_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWPROT, grp_data_exe_wb_fu_142_m_axi_gmem2_AWPROT, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWPROT <= grp_data_exe_wb_fu_142_m_axi_gmem2_AWPROT;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWPROT <= grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWPROT;
        else 
            m_axi_gmem2_AWPROT <= "XXX";
        end if; 
    end process;


    m_axi_gmem2_AWQOS_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWQOS, grp_data_exe_wb_fu_142_m_axi_gmem2_AWQOS, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWQOS <= grp_data_exe_wb_fu_142_m_axi_gmem2_AWQOS;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWQOS <= grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWQOS;
        else 
            m_axi_gmem2_AWQOS <= "XXXX";
        end if; 
    end process;


    m_axi_gmem2_AWREGION_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWREGION, grp_data_exe_wb_fu_142_m_axi_gmem2_AWREGION, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWREGION <= grp_data_exe_wb_fu_142_m_axi_gmem2_AWREGION;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWREGION <= grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWREGION;
        else 
            m_axi_gmem2_AWREGION <= "XXXX";
        end if; 
    end process;


    m_axi_gmem2_AWSIZE_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWSIZE, grp_data_exe_wb_fu_142_m_axi_gmem2_AWSIZE, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWSIZE <= grp_data_exe_wb_fu_142_m_axi_gmem2_AWSIZE;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWSIZE <= grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWSIZE;
        else 
            m_axi_gmem2_AWSIZE <= "XXX";
        end if; 
    end process;


    m_axi_gmem2_AWUSER_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWUSER, grp_data_exe_wb_fu_142_m_axi_gmem2_AWUSER, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWUSER <= grp_data_exe_wb_fu_142_m_axi_gmem2_AWUSER;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWUSER <= grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWUSER;
        else 
            m_axi_gmem2_AWUSER <= "X";
        end if; 
    end process;


    m_axi_gmem2_AWVALID_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWVALID, grp_data_exe_wb_fu_142_m_axi_gmem2_AWVALID, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWVALID <= grp_data_exe_wb_fu_142_m_axi_gmem2_AWVALID;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_AWVALID <= grp_op_data_exe_wb_fu_112_m_axi_gmem2_AWVALID;
        else 
            m_axi_gmem2_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem2_BREADY_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem2_BREADY, grp_data_exe_wb_fu_142_m_axi_gmem2_BREADY, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_BREADY <= grp_data_exe_wb_fu_142_m_axi_gmem2_BREADY;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_BREADY <= grp_op_data_exe_wb_fu_112_m_axi_gmem2_BREADY;
        else 
            m_axi_gmem2_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem2_RREADY <= ap_const_logic_0;

    m_axi_gmem2_WDATA_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem2_WDATA, grp_data_exe_wb_fu_142_m_axi_gmem2_WDATA, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_WDATA <= grp_data_exe_wb_fu_142_m_axi_gmem2_WDATA;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_WDATA <= grp_op_data_exe_wb_fu_112_m_axi_gmem2_WDATA;
        else 
            m_axi_gmem2_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem2_WID_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem2_WID, grp_data_exe_wb_fu_142_m_axi_gmem2_WID, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_WID <= grp_data_exe_wb_fu_142_m_axi_gmem2_WID;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_WID <= grp_op_data_exe_wb_fu_112_m_axi_gmem2_WID;
        else 
            m_axi_gmem2_WID <= "X";
        end if; 
    end process;


    m_axi_gmem2_WLAST_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem2_WLAST, grp_data_exe_wb_fu_142_m_axi_gmem2_WLAST, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_WLAST <= grp_data_exe_wb_fu_142_m_axi_gmem2_WLAST;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_WLAST <= grp_op_data_exe_wb_fu_112_m_axi_gmem2_WLAST;
        else 
            m_axi_gmem2_WLAST <= 'X';
        end if; 
    end process;


    m_axi_gmem2_WSTRB_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem2_WSTRB, grp_data_exe_wb_fu_142_m_axi_gmem2_WSTRB, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_WSTRB <= grp_data_exe_wb_fu_142_m_axi_gmem2_WSTRB;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_WSTRB <= grp_op_data_exe_wb_fu_112_m_axi_gmem2_WSTRB;
        else 
            m_axi_gmem2_WSTRB <= "XXXX";
        end if; 
    end process;


    m_axi_gmem2_WUSER_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem2_WUSER, grp_data_exe_wb_fu_142_m_axi_gmem2_WUSER, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_WUSER <= grp_data_exe_wb_fu_142_m_axi_gmem2_WUSER;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_WUSER <= grp_op_data_exe_wb_fu_112_m_axi_gmem2_WUSER;
        else 
            m_axi_gmem2_WUSER <= "X";
        end if; 
    end process;


    m_axi_gmem2_WVALID_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem2_WVALID, grp_data_exe_wb_fu_142_m_axi_gmem2_WVALID, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_WVALID <= grp_data_exe_wb_fu_142_m_axi_gmem2_WVALID;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem2_WVALID <= grp_op_data_exe_wb_fu_112_m_axi_gmem2_WVALID;
        else 
            m_axi_gmem2_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem3_ARADDR_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARADDR, grp_operation_fu_166_m_axi_gmem3_ARADDR, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARADDR <= grp_operation_fu_166_m_axi_gmem3_ARADDR;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARADDR <= grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARADDR;
        else 
            m_axi_gmem3_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem3_ARBURST_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARBURST, grp_operation_fu_166_m_axi_gmem3_ARBURST, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARBURST <= grp_operation_fu_166_m_axi_gmem3_ARBURST;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARBURST <= grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARBURST;
        else 
            m_axi_gmem3_ARBURST <= "XX";
        end if; 
    end process;


    m_axi_gmem3_ARCACHE_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARCACHE, grp_operation_fu_166_m_axi_gmem3_ARCACHE, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARCACHE <= grp_operation_fu_166_m_axi_gmem3_ARCACHE;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARCACHE <= grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARCACHE;
        else 
            m_axi_gmem3_ARCACHE <= "XXXX";
        end if; 
    end process;


    m_axi_gmem3_ARID_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARID, grp_operation_fu_166_m_axi_gmem3_ARID, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARID <= grp_operation_fu_166_m_axi_gmem3_ARID;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARID <= grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARID;
        else 
            m_axi_gmem3_ARID <= "X";
        end if; 
    end process;


    m_axi_gmem3_ARLEN_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARLEN, grp_operation_fu_166_m_axi_gmem3_ARLEN, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARLEN <= grp_operation_fu_166_m_axi_gmem3_ARLEN;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARLEN <= grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARLEN;
        else 
            m_axi_gmem3_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem3_ARLOCK_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARLOCK, grp_operation_fu_166_m_axi_gmem3_ARLOCK, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARLOCK <= grp_operation_fu_166_m_axi_gmem3_ARLOCK;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARLOCK <= grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARLOCK;
        else 
            m_axi_gmem3_ARLOCK <= "XX";
        end if; 
    end process;


    m_axi_gmem3_ARPROT_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARPROT, grp_operation_fu_166_m_axi_gmem3_ARPROT, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARPROT <= grp_operation_fu_166_m_axi_gmem3_ARPROT;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARPROT <= grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARPROT;
        else 
            m_axi_gmem3_ARPROT <= "XXX";
        end if; 
    end process;


    m_axi_gmem3_ARQOS_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARQOS, grp_operation_fu_166_m_axi_gmem3_ARQOS, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARQOS <= grp_operation_fu_166_m_axi_gmem3_ARQOS;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARQOS <= grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARQOS;
        else 
            m_axi_gmem3_ARQOS <= "XXXX";
        end if; 
    end process;


    m_axi_gmem3_ARREGION_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARREGION, grp_operation_fu_166_m_axi_gmem3_ARREGION, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARREGION <= grp_operation_fu_166_m_axi_gmem3_ARREGION;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARREGION <= grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARREGION;
        else 
            m_axi_gmem3_ARREGION <= "XXXX";
        end if; 
    end process;


    m_axi_gmem3_ARSIZE_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARSIZE, grp_operation_fu_166_m_axi_gmem3_ARSIZE, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARSIZE <= grp_operation_fu_166_m_axi_gmem3_ARSIZE;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARSIZE <= grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARSIZE;
        else 
            m_axi_gmem3_ARSIZE <= "XXX";
        end if; 
    end process;


    m_axi_gmem3_ARUSER_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARUSER, grp_operation_fu_166_m_axi_gmem3_ARUSER, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARUSER <= grp_operation_fu_166_m_axi_gmem3_ARUSER;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARUSER <= grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARUSER;
        else 
            m_axi_gmem3_ARUSER <= "X";
        end if; 
    end process;


    m_axi_gmem3_ARVALID_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARVALID, grp_operation_fu_166_m_axi_gmem3_ARVALID, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARVALID <= grp_operation_fu_166_m_axi_gmem3_ARVALID;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_ARVALID <= grp_op_data_exe_wb_fu_112_m_axi_gmem3_ARVALID;
        else 
            m_axi_gmem3_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem3_AWADDR <= ap_const_lv64_0;
    m_axi_gmem3_AWBURST <= ap_const_lv2_0;
    m_axi_gmem3_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem3_AWID <= ap_const_lv1_0;
    m_axi_gmem3_AWLEN <= ap_const_lv32_0;
    m_axi_gmem3_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem3_AWPROT <= ap_const_lv3_0;
    m_axi_gmem3_AWQOS <= ap_const_lv4_0;
    m_axi_gmem3_AWREGION <= ap_const_lv4_0;
    m_axi_gmem3_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem3_AWUSER <= ap_const_lv1_0;
    m_axi_gmem3_AWVALID <= ap_const_logic_0;
    m_axi_gmem3_BREADY <= ap_const_logic_0;

    m_axi_gmem3_RREADY_assign_proc : process(ap_CS_fsm_state1, selec, grp_op_data_exe_wb_fu_112_m_axi_gmem3_RREADY, grp_operation_fu_166_m_axi_gmem3_RREADY, ap_CS_fsm_state2)
    begin
        if ((((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_RREADY <= grp_operation_fu_166_m_axi_gmem3_RREADY;
        elsif ((((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((selec = ap_const_lv32_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_gmem3_RREADY <= grp_op_data_exe_wb_fu_112_m_axi_gmem3_RREADY;
        else 
            m_axi_gmem3_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem3_WDATA <= ap_const_lv32_0;
    m_axi_gmem3_WID <= ap_const_lv1_0;
    m_axi_gmem3_WLAST <= ap_const_logic_0;
    m_axi_gmem3_WSTRB <= ap_const_lv4_0;
    m_axi_gmem3_WUSER <= ap_const_lv1_0;
    m_axi_gmem3_WVALID <= ap_const_logic_0;
end behav;
